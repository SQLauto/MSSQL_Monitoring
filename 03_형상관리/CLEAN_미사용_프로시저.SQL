-- DBADB1 서버 
USE AMDIN
GO

CREATE TABLE NOUSED_PROCEDURE
(
	SEQNO bigint    NOT NULL   ,
	SERVER_NAME		SYSNAME NOT NULL,
	DATABASE_NAME	SYSNAME NOT NULL,
	SCRIPT_NO int    NULL   , 
	SCHEMA_NAME varchar (100)   NOT NULL ,
	OBJECT_NAME		SYSNAME NOT NULL,
	UNUSED_DAY      int    NULL   , 
	SYNC_UNUSED_DAY   INT NULL,
	DEV_RENAME_DATE	DATETIME, 
	DEV_DROP_DATE DATETIME, 
	RENAME_DATE DATETIME, 
	DROP_DATE DATETIME, 
	DEL_YN  CHAR(1) NULL, 
	ROLLBACK_DATE DATETIME,
	UPD_DATE datetime    NOT NULL  CONSTRAINT DF__NOUSED_PROCEDURE__UPD_DATE DEFAULT (getdate())  , 
) ON [PRIMARY]
CREATE clustered INDEX CIDX__NOUSED_PROCEDURE__SERVER_NAME__DATABASE_NAME_OBJECT_NAME ON NOUSED_PROCEDURE (DATABASE_NAME, OBJECT_NAME ) ON [PRIMARY] 
GO
CREATE nonclustered INDEX IDX__NOUSED_PROCEDURE__DEL_YN__SERVER_NAME ON NOUSED_PROCEDURE (DEL_YN,SERVER_NAME ) ON [PRIMARY] 
GO
CREATE nonclustered INDEX IDX__NOUSED_PROCEDURE_UNUSED_DAY ON NOUSED_PROCEDURE (UNUSED_DAY ) ON [PRIMARY] 
GO

CREATE TABLE WORK_USED_PROCEDURE 
(	SERVER_NAME		SYSNAME NOT NULL,
	DATABASE_NAME	SYSNAME NOT NULL,
	SCHEMA_NAME varchar (100)   NOT NULL ,
	OBJECT_NAME		SYSNAME NOT NULL,
	LAST_EXECUTE_TIME DATETIME
)
ALTER TABLE WORK_USED_PROCEDURE ADD CONSTRAINT PK__WORK_USED_PROCEDURE__DATABASE_NAME__OBJECT_NAME  PRIMARY KEY CLUSTERED ( DATABASE_NAME,  OBJECT_NAME,SCHEMA_NAME) WITH(DATA_COMPRESSION = PAGE)
  
  


-- 각자 서버 
CREATE TABLE WORK_USED_PROCEDURE 
(	SERVER_NAME		SYSNAME NOT NULL,
	DATABASE_NAME	SYSNAME NOT NULL,
	SCHEMA_NAME varchar (100)   NOT NULL ,
	OBJECT_NAME		SYSNAME NOT NULL,
	LAST_EXECUTE_TIME DATETIME
)
ALTER TABLE WORK_USED_PROCEDURE ADD CONSTRAINT PK__WORK_USED_PROCEDURE__DATABASE_NAME__OBJECT_NAME  PRIMARY KEY CLUSTERED ( DATABASE_NAME,  OBJECT_NAME,SCHEMA_NAME) WITH(DATA_COMPRESSION = PAGE)
  
  


/*************************************************************************  
* 프로시저명: dbo.up_dba_noused_procedure_usedtarget
* 작성정보	: 2016-10-06 최보라 
* 관련페이지:  
* 내용		: 마지막 사용 sp 

* 수정정보	: 
**************************************************************************/
CREATE PROCEDURE dbo.up_dba_noused_procedure_usedtarget
AS

/* COMMON DECLARE */
SET NOCOUNT ON

/* USER DECLARE  */

/*BODY*/
-- 3개월 이전 생성된 SP 대상으로 한다. sp 생성되고 서비스가 오픈되지 않을 수 있기 때문 
-- 마지막 실행일자를 적재 해서 dbadb1 에서 확인 한다. 
-- 마지막 실행일자가 6개월이 지났거나, 실행 내역에 없는 sp가 최종 미사용 이다. 
/*

INSERT INTO WORK_USED_PROCEDURE
(SERVER_NAME
,DATABASE_NAME
,SCHEMA_NAME
,OBJECT_NAME
,LAST_EXECUTE_TIME
)
SELECT 'GMKT2008' AS SERVER_NAME, DB_NAME, SCHEME_NAME, OBJECT_NAME, MAX(LAST_EXECUTION_TIME) AS LAST_EXECUTION_TIME
FROM DB_MON_QUERY_STATS_ALL_GMKT2008 WITH(NOLOCK) WHERE  REG_DATE < '2015-05-01'
GROUP BY DB_NAME, SCHEME_NAME, OBJECT_NAME

*/



MERGE WORK_USED_PROCEDURE AS TARGET
	USING ( 
			SELECT 'GMKT2008' AS SERVER_NAME, DB_NAME, SCHEME_NAME, OBJECT_NAME, MAX(LAST_EXECUTION_TIME) AS LAST_EXECUTION_TIME
			FROM DB_MON_QUERY_STATS_ALL_GMKT2008 WITH(NOLOCK) WHERE  REG_DATE >= '2015-05-01'
			AND DB_NAME IS NOT NULL AND SCHEME_NAME IS NOT NULL AND OBJECT_NAME IS NOT NULL
			GROUP BY DB_NAME, SCHEME_NAME, OBJECT_NAME
		 ) AS SOURCE
		 ON TARGET.DATABASE_NAME = SOURCE.DB_NAME AND TARGET.SCHEMA_NAME = SOURCE.SCHEME_NAME AND TARGET.OBJECT_NAME = SOURCE.OBJECT_NAME
	WHEN MATCHED  THEN 
		UPDATE SET LAST_EXECUTE_TIME = SOURCE.LAST_EXECUTION_TIME
	WHEN NOT MATCHED THEN
		INSERT (SERVER_NAME
			,DATABASE_NAME
			,SCHEMA_NAME
			,OBJECT_NAME
			,LAST_EXECUTE_TIME
			)
		VALUES (SOURCE.SERVER_NAME, SOURCE.DB_NAME, SOURCE.SCHEME_NAME, SOURCE.OBJECT_NAME, SOURCE.LAST_EXECUTION_TIME)
	;
	
	
	--GMKT2008 REAL 자료 
	

MERGE WORK_USED_PROCEDURE AS TARGET
	USING ( 
			SELECT 'GMKT2008' AS SERVER_NAME, DB_NAME, SCHEME_NAME, OBJECT_NAME, MAX(LAST_EXECUTION_TIME) AS LAST_EXECUTION_TIME
			FROM DBMON_GMKT2008.DBO.DB_MON_QUERY_STATS_ALL WITH(NOLOCK) WHERE 
			DB_NAME IN ( 
			'EAGLEDB'
			,'SETTLE'
			,'LION'
			,'TIGER'
			,'EVENT'
			,'CCMNG'
			,'BASKET'
			,'CUSTOMER'
			,'BASKET_ORDER'
			,'INSA'
			,'SEARCH2'
			)
			AND DB_NAME IS NOT NULL AND SCHEME_NAME IS NOT NULL AND OBJECT_NAME IS NOT NULL
			GROUP BY DB_NAME, SCHEME_NAME, OBJECT_NAME
		 ) AS SOURCE
		 ON TARGET.DATABASE_NAME = SOURCE.DB_NAME AND TARGET.SCHEMA_NAME = SOURCE.SCHEME_NAME AND TARGET.OBJECT_NAME = SOURCE.OBJECT_NAME
	WHEN MATCHED  THEN 
		UPDATE SET LAST_EXECUTE_TIME = SOURCE.LAST_EXECUTION_TIME
	WHEN NOT MATCHED THEN
		INSERT (SERVER_NAME
			,DATABASE_NAME
			,SCHEMA_NAME
			,OBJECT_NAME
			,LAST_EXECUTE_TIME
			)
		VALUES (SOURCE.SERVER_NAME, SOURCE.DB_NAME, SOURCE.SCHEME_NAME, SOURCE.OBJECT_NAME, SOURCE.LAST_EXECUTION_TIME)
	;



-- GCONTENTSDB 
	
MERGE WORK_USED_PROCEDURE AS TARGET
	USING ( 
			SELECT 'GCONTENTSDB' AS SERVER_NAME, DB_NAME, SCHEME_NAME, OBJECT_NAME, MAX(LAST_EXECUTION_TIME) AS LAST_EXECUTION_TIME
			FROM DB_MON_QUERY_STATS_ALL_GCONTENTSDB WITH(NOLOCK) WHERE  REG_DATE < '2015-05-01'
			AND DB_NAME IS NOT NULL AND SCHEME_NAME IS NOT NULL AND OBJECT_NAME IS NOT NULL
			GROUP BY DB_NAME, SCHEME_NAME, OBJECT_NAME
		 ) AS SOURCE
		 ON TARGET.DATABASE_NAME = SOURCE.DB_NAME AND TARGET.SCHEMA_NAME = SOURCE.SCHEME_NAME AND TARGET.OBJECT_NAME = SOURCE.OBJECT_NAME
	WHEN MATCHED  THEN 
		UPDATE SET LAST_EXECUTE_TIME = SOURCE.LAST_EXECUTION_TIME
	WHEN NOT MATCHED THEN
		INSERT (SERVER_NAME
			,DATABASE_NAME
			,SCHEMA_NAME
			,OBJECT_NAME
			,LAST_EXECUTE_TIME
			)
		VALUES (SOURCE.SERVER_NAME, SOURCE.DB_NAME, SOURCE.SCHEME_NAME, SOURCE.OBJECT_NAME, SOURCE.LAST_EXECUTION_TIME)
	;
	
	
	