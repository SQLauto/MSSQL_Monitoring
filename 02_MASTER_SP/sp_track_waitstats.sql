/*
	작성자 : DB개발팀 권병준
	작성일 : 2007-08-19
	Usage :
	
	-- 대기 수집
	EXECUTE DBO.TRACK_WAITSTATS @NUM_SAMPLES=6 ,@DELAY_INTERVAL=30 ,@DELAY_TYPE='S' ,@TRUNCATE_HISTORY='Y' ,@CLEAR_WAITSTATS='Y'	

	-- 수집된 대기 조회
	EXECUTE DBO.BJ_GET_WAITSTATS
*/

CREATE PROC DBO.SP_TRACK_WAITSTATS 
	(@NUM_SAMPLES INT=4, 
	@DELAY_INTERVAL INT=15, 
	@DELAY_TYPE NVARCHAR(10)='S', 
	@TRUNCATE_HISTORY NVARCHAR(1)='Y', 
	@CLEAR_WAITSTATS NVARCHAR(1)='Y') 
AS 

-- THIS STORED PROCEDURE IS PROVIDED "AS IS" WITH NO WARRANTIES, AND 
-- CONFERS NO RIGHTS. 
-- USE OF INCLUDED SCRIPT SAMPLES ARE SUBJECT TO THE TERMS SPECIFIED AT 
-- HTTP://WWW.MICROSOFT.COM/INFO/CPYRIGHT.HTM 
-- 
-- T. DAVIDSON 
-- @NUM_SAMPLES IS THE NUMBER OF TIMES TO CAPTURE WAITSTATS, DEFAULT IS 10 
-- TIMES -- DEFAULT DELAY INTERVAL IS 1 MINUTE 
-- DELAYNUM IS THE DELAY INTERVAL - CAN BE MINUTES OR SECONDS 
-- DELAYTYPE SPECIFIES WHETHER THE DELAY INTERVAL IS MINUTES OR SECONDS 
-- CREATE WAITSTATS TABLE IF IT DOESN'T EXIST, OTHERWISE TRUNCATE 
-- REVISION: 4/19/05 
--- (1) ADDED OBJECT OWNER QUALIFIER
--- (2) OPTIONAL PARAMETERS TO TRUNCATE HISTORY AND CLEAR WAITSTATS 

SET NOCOUNT ON 

/*IF NOT EXISTS 	(SELECT 
			1 
		FROM 
			SYS.OBJECTS 
		WHERE 
			OBJECT_ID = OBJECT_ID ( N'[DBA].[DBO].[BJ_WAITSTATS]') AND 
			OBJECTPROPERTY(OBJECT_ID, N'ISUSERTABLE') = 1) 
	CREATE TABLE [DBA].[DBO].[BJ_WAITSTATS] 
	(
		[WAIT_TYPE] NVARCHAR(60) NOT NULL, 
		[WAITING_TASKS_COUNT] BIGINT NOT NULL, 
		[WAIT_TIME_MS] BIGINT NOT NULL, 
		[MAX_WAIT_TIME_MS] BIGINT NOT NULL, 
		[SIGNAL_WAIT_TIME_MS] BIGINT NOT NULL, 
		[NOW] DATETIME NOT NULL DEFAULT GETDATE()
	) 
*/

IF LOWER(@TRUNCATE_HISTORY) NOT IN (N'Y',N'N') 
BEGIN 
	RAISERROR ('VALID @TRUNCATE_HISTORY VALUES ARE ''Y'' OR ''N''',16,1) WITH NOWAIT 
END 

IF LOWER(@CLEAR_WAITSTATS) NOT IN (N'Y',N'N') 
BEGIN 
	RAISERROR ('VALID @CLEAR_WAITSTATS VALUES ARE ''Y'' OR ''N''',16,1) WITH NOWAIT 
END 

IF LOWER(@TRUNCATE_HISTORY) = N'Y' 
	TRUNCATE TABLE DBA.DBO.BJ_WAITSTATS 

-- CLEAR OUT BJ_WAITSTATS
IF LOWER (@CLEAR_WAITSTATS) = N'Y' 
	DBCC SQLPERF ([SYS.DM_OS_WAIT_STATS],CLEAR) WITH NO_INFOMSGS 

DECLARE	@I INT,
		@DELAY VARCHAR(8), 
		@DT VARCHAR(3), 
		@NOW DATETIME, 
		@TOTALWAIT NUMERIC(20,1), 
		@ENDTIME DATETIME, 
		@BEGINTIME DATETIME, 
		@HR INT, @MIN INT, 
		@SEC INT 

SELECT 
	@I = 1 
SELECT 
	@DT = CASE LOWER(@DELAY_TYPE) 
		WHEN N'MINUTES' THEN 'M' 
		WHEN N'MINUTE' THEN 'M' 
		WHEN N'MIN' THEN 'M' 
		WHEN N'MI' THEN 'M' 
		WHEN N'N' THEN 'M' 
		WHEN N'M' THEN 'M' 
		WHEN N'SECONDS' THEN 'S' 
		WHEN N'SECOND' THEN 'S' 
		WHEN N'SEC' THEN 'S' 
		WHEN N'SS' THEN 'S' 
		WHEN N'S' THEN 'S' 
		ELSE @DELAY_TYPE 
	END 

IF @DT NOT IN ('S','M') 
BEGIN 
	RAISERROR ('DELAY TYPE MUST BE EITHER ''SECONDS'' OR ''MINUTES''',16,1) WITH NOWAIT 
	RETURN 
END 

IF @DT = 'S' 
BEGIN 
	SELECT 
		@SEC = @DELAY_INTERVAL % 60, 
		@MIN = CAST((@DELAY_INTERVAL / 60) AS INT), 
		@HR = CAST((@MIN / 60) AS INT) 
END 

IF @DT = 'M' 
BEGIN 
	SELECT 
		@SEC = 0, 
		@MIN = @DELAY_INTERVAL % 60, 
		@HR = CAST((@DELAY_INTERVAL / 60) AS INT) 
END 

SELECT 
	@DELAY= RIGHT('0'+ CONVERT(VARCHAR(2),@HR),2) + ':' + + RIGHT('0'+CONVERT(VARCHAR(2),@MIN),2) + ':' + + RIGHT('0'+CONVERT(VARCHAR(2),@SEC),2) 

IF @HR > 23 OR @MIN > 59 OR @SEC > 59 
BEGIN 
	SELECT '
		DELAY INTERVAL AND TYPE: ' + CONVERT (VARCHAR(10),@DELAY_INTERVAL) + ',' + @DELAY_TYPE + ' CONVERTS TO ' + @DELAY 
	RAISERROR ('HH:MM:SS DELAY TIME CANNOT > 23:59:59',16,1) WITH NOWAIT 
	RETURN 
END 

WHILE (@I <= @NUM_SAMPLES) 
BEGIN
	SELECT 
		@NOW = GETDATE() 

	INSERT INTO [DBA].[DBO].[BJ_WAITSTATS]
	(
		[WAIT_TYPE], 
		[WAITING_TASKS_COUNT], 
		[WAIT_TIME_MS], 
		[MAX_WAIT_TIME_MS], 
		[SIGNAL_WAIT_TIME_MS], 
		[NOW]
	)
	 SELECT 
		[WAIT_TYPE], 
		[WAITING_TASKS_COUNT], 
		[WAIT_TIME_MS], 
		[MAX_WAIT_TIME_MS], 
		[SIGNAL_WAIT_TIME_MS], 
		@NOW 
	FROM 
		SYS.DM_OS_WAIT_STATS 

	INSERT INTO [DBA].[DBO].[BJ_WAITSTATS]
	(
		[WAIT_TYPE], 
		[WAITING_TASKS_COUNT], 
		[WAIT_TIME_MS], 
		[MAX_WAIT_TIME_MS], 
		[SIGNAL_WAIT_TIME_MS], 
		[NOW]
	) 
	SELECT 
		'TOTAL', 
		SUM([WAITING_TASKS_COUNT]), 
		SUM([WAIT_TIME_MS]), 
		0, 
		SUM([SIGNAL_WAIT_TIME_MS]), 
		@NOW 
	FROM 
		[DBA].[DBO].[BJ_WAITSTATS] 
	WHERE 
		[NOW] = @NOW 

	SELECT 
		@I = @I + 1 
	
	WAITFOR DELAY @DELAY 

END 
