CREATE PROC [DBO].[SP_GET_WAITSTATS] 
	(@REPORT_FORMAT VARCHAR(20)='ALL', 
	@REPORT_ORDER VARCHAR(20)='RESOURCE') 
AS 

-- THIS STORED PROCEDURE IS PROVIDED "AS IS" WITH NO WARRANTIES, AND 
-- CONFERS NO RIGHTS. 
-- USE OF INCLUDED SCRIPT SAMPLES ARE SUBJECT TO THE TERMS SPECIFIED AT 
-- HTTP://WWW.MICROSOFT.COM/INFO/CPYRIGHT.HTM 
--
-- THIS PROC WILL CREATE WAITSTATS REPORT LISTING WAIT TYPES BY 
-- PERCENTAGE. 
-- (1) TOTAL WAIT TIME IS THE SUM OF RESOURCE & SIGNAL WAITS, 
-- 	@REPORT_FORMAT='ALL' REPORTS RESOURCE & SIGNAL 
-- (2) BASICS OF EXECUTION MODEL (SIMPLIFIED) 
-- 	A. SPID IS RUNNING THEN NEEDS UNAVAILABLE RESOURCE, MOVES TO 
-- 	RESOURCE WAIT LIST AT TIME T0 
-- 	B. A SIGNAL INDICATES RESOURCE AVAILABLE, SPID MOVES TO 
-- 	RUNNABLE QUEUE AT TIME T1 
-- 	C. SPID AWAITS RUNNING STATUS UNTIL T2 AS CPU WORKS ITS WAY 
-- 	THROUGH RUNNABLE QUEUE IN ORDER OF ARRIVAL 
-- (3) RESOURCE WAIT TIME IS THE ACTUAL TIME WAITING FOR THE 
-- 	RESOURCE TO BE AVAILABLE, T1-T0 
-- (4) SIGNAL WAIT TIME IS THE TIME IT TAKES FROM THE POINT THE 
-- 	RESOURCE IS AVAILABLE (T1) 
-- 	TO THE POINT IN WHICH THE PROCESS IS RUNNING AGAIN AT T2.
-- 	THUS, SIGNAL WAITS ARE T2-T1 
-- (5) KEY QUESTIONS: ARE RESOURCE AND SIGNAL TIME SIGNIFICANT? 
-- 	A. HIGHEST WAITS INDICATE THE BOTTLENECK YOU NEED TO SOLVE 
-- 	FOR SCALABILITY 
-- 	B. GENERALLY IF YOU HAVE LOW% SIGNAL WAITS, THE CPU IS 
-- 	HANDLING THE WORKLOAD E.G. SPIDS SPEND MOVE THROUGH 
-- 	RUNNABLE QUEUE QUICKLY 
-- 	C. HIGH % SIGNAL WAITS INDICATES CPU CAN'T KEEP UP, 
-- 	SIGNIFICANT TIME FOR SPIDS TO MOVE UP THE RUNNABLE QUEUE 
-- 	TO REACH RUNNING STATUS 
-- (6) THIS PROC CAN BE RUN WHEN TRACK_WAITSTATS IS EXECUTING 
-- 
-- REVISION 4/19/2005 
-- (1) ADD COMPUTATION FOR CPU RESOURCE WAITS = SUM(SIGNAL WAITS / TOTAL WAITS) 
-- (2) ADD @REPORT_ORDER PARM TO ALLOW SORTING BY RESOURCE, SIGNAL OR TOTAL WAITS 

SET NOCOUNT ON 

DECLARE 	@NOW DATETIME, 
		@TOTALWAITCOUNTS NUMERIC(20,1),
		@TOTALWAIT NUMERIC(20,1), 
		@TOTALSIGNALWAIT NUMERIC(20,1), 
		@TOTALRESOURCEWAIT NUMERIC(20,1), 
		@ENDTIME DATETIME,
		@BEGINTIME DATETIME, 
		@HR INT, 
		@MIN INT, 
		@SEC INT 

/*IF NOT EXISTS 	(SELECT 
			1 
		FROM 
			SYSOBJECTS 
		WHERE 
			ID = OBJECT_ID ( N'[DBO].[BJ_WAITSTATS]') AND 
			OBJECTPROPERTY (ID, N'ISUSERTABLE') = 1
		) 
BEGIN 
	RAISERROR('ERROR [DBO].[BJ_WAITSTATS] TABLE DOES NOT EXIST', 16, 1) WITH NOWAIT 
	RETURN 
END 
*/

IF LOWER(@REPORT_FORMAT) NOT IN ('ALL','DETAIL','SIMPLE')
BEGIN 
	RAISERROR ('@REPORT_FORMAT MUST BE EITHER ''ALL'', ''DETAIL'', OR ''SIMPLE''',16,1) WITH NOWAIT 
	RETURN 
END 

IF LOWER(@REPORT_ORDER) NOT IN ('RESOURCE','SIGNAL','TOTAL') 
BEGIN 
	RAISERROR ('@REPORT_ORDER MUST BE EITHER ''RESOURCE'', ''SIGNAL'', OR ''TOTAL''',16,1) WITH NOWAIT 
	RETURN 
END 

IF LOWER(@REPORT_FORMAT) = 'SIMPLE' AND LOWER(@REPORT_ORDER) <> 'TOTAL' 
BEGIN 
	RAISERROR ('@REPORT_FORMAT IS SIMPLE SO ORDER DEFAULTS TO ''TOTAL''', 16,1) WITH NOWAIT 
	SELECT @REPORT_ORDER = 'TOTAL' 
END 

SELECT 
	@NOW=MAX(NOW), 
	@BEGINTIME=MIN(NOW), 
	@ENDTIME=MAX(NOW) 
FROM 
	[DBA].[DBO].[BJ_WAITSTATS] 
WHERE 
	[WAIT_TYPE] = 'TOTAL' 

--- SUBTRACT WAITFOR, SLEEP, AND RESOURCE_QUEUE FROM TOTAL 
SELECT
	@TOTALWAITCOUNTS = SUM([WAITING_TASKS_COUNT]), 
	@TOTALWAIT = SUM([WAIT_TIME_MS]) + 1, 
	@TOTALSIGNALWAIT = SUM([SIGNAL_WAIT_TIME_MS]) + 1 
FROM 
	DBA.DBO.BJ_WAITSTATS 
WHERE 
	[WAIT_TYPE] NOT IN ( 'CLR_SEMAPHORE', 'LAZYWRITER_SLEEP', 'RESOURCE_QUEUE', 'SLEEP_TASK', 'SLEEP_SYSTEMTASK', 'TOTAL' ,'WAITFOR', '***TOTAL***') AND 
	[NOW] = @NOW 

SELECT 
	@TOTALRESOURCEWAIT = 1 + @TOTALWAIT - @TOTALSIGNALWAIT 

-- INSERT ADJUSTED TOTALS, RANK BY PERCENTAGE DESCENDING 
DELETE 
	DBA.DBO.BJ_WAITSTATS 
WHERE 
	[WAIT_TYPE] = '***TOTAL***' AND 
	NOW = @NOW 

INSERT INTO DBA.DBO.BJ_WAITSTATS 
SELECT 
	'***TOTAL***', 
	@TOTALWAITCOUNTS,
	@TOTALWAIT, 
	0, 
	@TOTALSIGNALWAIT, 
	@NOW

SELECT 
	'START TIME' = @BEGINTIME,
	'END TIME' = @ENDTIME, 
	'DURATION (HH:MM:SS:MS)' = CONVERT(VARCHAR(50),
	@ENDTIME - @BEGINTIME,14), 
	'REPORT FORMAT' = @REPORT_FORMAT, 
	'REPORT ORDER' = @REPORT_ORDER 

IF LOWER(@REPORT_FORMAT) IN ('ALL','DETAIL') 
BEGIN 
	----- FORMAT=DETAIL, COLUMN ORDER IS RESOURCE, SIGNAL, TOTAL. ORDER BY RESOURCE DESC 
	IF LOWER(@REPORT_ORDER) = 'RESOURCE' 
		SELECT 
			[WAIT_TYPE],
			[WAITING_TASKS_COUNT], 
			'RESOURCE WT (T1-T0)' = [WAIT_TIME_MS]-[SIGNAL_WAIT_TIME_MS], 
			'RES_WT_%' = CAST (100*([WAIT_TIME_MS] - [SIGNAL_WAIT_TIME_MS]) / @TOTALRESOURCEWAIT AS NUMERIC(20,1)), 
			'SIGNAL WT (T2-T1)' = [SIGNAL_WAIT_TIME_MS], 
			'SIG_WT_%' = CAST (100*[SIGNAL_WAIT_TIME_MS] / @TOTALSIGNALWAIT AS NUMERIC(20,1)), 
			'TOTAL WT (T2-T0)' = [WAIT_TIME_MS], 
			'WT_%' = CAST (100*[WAIT_TIME_MS] / @TOTALWAIT AS NUMERIC(20,1)) 
		FROM 
			DBA.DBO.BJ_WAITSTATS 
		WHERE 
			[WAIT_TYPE] NOT IN ('CLR_SEMAPHORE', 'LAZYWRITER_SLEEP', 'RESOURCE_QUEUE', 'SLEEP_TASK', 'SLEEP_SYSTEMTASK', 'TOTAL', 'WAITFOR') AND 
			[NOW] = @NOW 
		ORDER BY 
			'RES_WT_%' DESC 

----- FORMAT = DETAIL, COLUMN ORDER SIGNAL, RESOURCE, TOTAL. ORDER BY SIGNAL DESC 
IF LOWER(@REPORT_ORDER) = 'SIGNAL' 
	SELECT 
		[WAIT_TYPE], 
		[WAITING_TASKS_COUNT], 
		'SIGNAL WT (T2-T1)' = [SIGNAL_WAIT_TIME_MS], 
		'SIG_WT_%' = CAST (100*[SIGNAL_WAIT_TIME_MS] / @TOTALSIGNALWAIT AS NUMERIC(20,1)), 
		'RESOURCE WT (T1-T0)' = [WAIT_TIME_MS]-[SIGNAL_WAIT_TIME_MS], 
		'RES_WT_%' = CAST (100*([WAIT_TIME_MS] - [SIGNAL_WAIT_TIME_MS]) /@TOTALRESOURCEWAIT AS NUMERIC(20,1)), 
		'TOTAL WT (T2-T0)' = [WAIT_TIME_MS], 
		'WT_%' = CAST (100*[WAIT_TIME_MS] / @TOTALWAIT AS NUMERIC(20,1)) 
	FROM 
		DBA.DBO.BJ_WAITSTATS 
	WHERE 
		[WAIT_TYPE] NOT IN ( 'CLR_SEMAPHORE', 'LAZYWRITER_SLEEP', 'RESOURCE_QUEUE', 'SLEEP_TASK', 'SLEEP_SYSTEMTASK', 'TOTAL', 'WAITFOR') AND
		[NOW] = @NOW 
	ORDER BY 
		'SIG_WT_%' DESC 

----- FORMAT=DETAIL, COLUMN ORDER TOTAL, RESOURCE, SIGNAL. ORDER BY TOTAL DESC 
IF LOWER(@REPORT_ORDER) = 'TOTAL' 
	SELECT 
		[WAIT_TYPE], 
		[WAITING_TASKS_COUNT], 
		'TOTAL WT (T2-T0)' = [WAIT_TIME_MS], 
		'WT_%' = CAST (100*[WAIT_TIME_MS] / @TOTALWAIT AS NUMERIC(20,1)), 
		'RESOURCE WT (T1-T0)' = [WAIT_TIME_MS]-[SIGNAL_WAIT_TIME_MS], 
		'RES_WT_%' = CAST (100*([WAIT_TIME_MS] - [SIGNAL_WAIT_TIME_MS]) / @TOTALRESOURCEWAIT AS NUMERIC(20,1)), 
		'SIGNAL WT (T2-T1)' = [SIGNAL_WAIT_TIME_MS], 
		'SIG_WT_%' = CAST (100*[SIGNAL_WAIT_TIME_MS] / @TOTALSIGNALWAIT AS NUMERIC(20,1)) 
	FROM 
		DBA.DBO.BJ_WAITSTATS 
	WHERE 
		[WAIT_TYPE] NOT IN ( 'CLR_SEMAPHORE', 'LAZYWRITER_SLEEP', 'RESOURCE_QUEUE', 'SLEEP_TASK', 'SLEEP_SYSTEMTASK', 'TOTAL', 'WAITFOR') AND 
		[NOW] = @NOW 
	ORDER BY 
		'WT_%' DESC 
END 
ELSE 
	---- SIMPLE FORMAT, TOTAL WAITS ONLY 
	SELECT 
		[WAIT_TYPE], [WAIT_TIME_MS], PERCENTAGE = CAST (100*[WAIT_TIME_MS] / @TOTALWAIT AS NUMERIC(20,1)) 
	FROM 
		DBA.DBO.BJ_WAITSTATS 
	WHERE 
		[WAIT_TYPE] NOT IN ( 'CLR_SEMAPHORE', 'LAZYWRITER_SLEEP', 'RESOURCE_QUEUE', 'SLEEP_TASK', 'SLEEP_SYSTEMTASK', 'TOTAL', 'WAITFOR') AND 
		[NOW] = @NOW 
	ORDER BY 
		PERCENTAGE DESC 

---- COMPUTE CPU RESOURCE WAITS 
SELECT 
	'TOTAL WAITS' = [WAIT_TIME_MS], 
	'TOTAL SIGNAL=CPU WAITS' = [SIGNAL_WAIT_TIME_MS], 
	'CPU RESOURCE WAITS % = SIGNAL WAITS / TOTAL WAITS' = CAST (100*[SIGNAL_WAIT_TIME_MS] / [WAIT_TIME_MS] AS NUMERIC(20,1)), 
	[NOW] 
FROM 
	[DBA].[DBO].[BJ_WAITSTATS]
WHERE 
	[WAIT_TYPE] = '***TOTAL***' 
ORDER BY 
	[NOW] 

SET NOCOUNT OFF