/*************************************************************************  
* : dbo.up_dba_collect_noused_table_procedure
* 	: 2015-03-16 
* :  
* 		: 

* 	:  table   
		EXEC dbo.up_dba_collect_noused_table_procedure 'G', 180
		FULLTEXT       
		20150513     Procedure 
**************************************************************************/
ALTER PROCEDURE dbo.up_dba_collect_noused_table_procedure
	@site_gn  CHAR(1) =  'G', 
	@unused_day int  = 180
AS

/* COMMON DECLARE */
SET NOCOUNT ON

/* USER DECLARE  */
DECLARE @REG_DATE DATE, @SERVER_ID INT, @I INT, @SEQ_NO BIGINT
DECLARE @OBJECT_NAME SYSNAME, @DB_NAME VARCHAR(200)


/*BODY*/
--   GET
SELECT @REG_DATE = REG_DATE FROM NOUSED_TARGET_TABLE_LOG WITH(NOLOCK)  WHERE SITE_GN = @SITE_GN AND PROCESS_TYPE = 'S'

IF @REG_DATE = CONVERT(DATE, GETDATE())  --  ,     
BEGIN

DECLARE @TOT_COUNT INT 
DELETE  I FROM TMP_NOUSED_TARGET_TABLE AS I JOIN SERVERINFO AS S ON I.SERVER_ID =S.SERVER_ID WHERE S.SITE_GN = @SITE_GN

INSERT INTO TMP_NOUSED_TARGET_TABLE
(SEQNO, SERVER_ID, DATABASE_NAME, OBJECT_NAME, SEARCH_YN )
SELECT distinct I.SEQNO, I.SERVER_ID, I.DATABASE_NAME, I.OBJECT_NAME, 'N' AS SEARCH_YN 
FROM NOUSED_TARGET_TABLE AS I WITH(NOLOCK) 
	JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
	LEFT join db_synk as b with(nolock) on I.server_id = b.server_id and I.database_name  = b.db_name
WHERE DEL_PROC_TARGET = 'Y'
	AND S.SITE_GN = @SITE_GN
	AND I.UNUSED_DAY >= @unused_day 
	AND I.SYNC_UNUSED_DAY >= (CASE WHEN b.db_name is null then 0 else  @unused_day end)
	AND I.REG_DATE = @REG_DATE

END
ELSE 
BEGIN
	
		
	--  table   Hint  Buffer  . 
	--      Insert  
	INSERT INTO TMP_NOUSED_TARGET_TABLE
	(SEQNO, SERVER_ID, DATABASE_NAME, OBJECT_NAME, SEARCH_YN )
	SELECT distinct  I.SEQNO, I.SERVER_ID, I.DATABASE_NAME, I.OBJECT_NAME, 'N' AS SEARCH_YN 
	FROM NOUSED_TARGET_TABLE AS I WITH(NOLOCK) 
		JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
		LEFT JOIN TMP_NOUSED_TARGET_TABLE AS T WITH(NOLOCK) ON T.SEQNO = I.SEQNO
		LEFT join db_synk as b with(nolock) on I.server_id = b.server_id and I.database_name  = b.db_name
	WHERE DEL_PROC_TARGET = 'Y'
		AND S.SITE_GN = @SITE_GN
		AND I.UNUSED_DAY >= @unused_day 
	    AND I.SYNC_UNUSED_DAY >= (CASE WHEN b.db_name is null then 0 else  @unused_day end)
		AND T.SEQNO  IS NULL
		AND I.REG_DATE = @REG_DATE
	
END

--      
DELETE P
--SELECT *
	FROM NOUSED_TARGET_TABLE AS I WITH(NOLOCK) 
		JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
			JOIN NOUSED_TARGET_PROCEDURE AS P WITH(NOLOCK) ON I.SEQNO = P.SEQNO
	WHERE DEL_PROC_TARGET = 'N' and REF_TYPE ='T'
		AND S.SITE_GN = @SITE_GN
		
DELETE T
--SELECT *
	FROM NOUSED_TARGET_TABLE I WITH(NOLOCK) 
		JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
		JOIN TMP_NOUSED_TARGET_TABLE AS T WITH(NOLOCK) ON T.SEQNO = I.SEQNO
	WHERE DEL_PROC_TARGET = 'N' 
		AND S.SITE_GN = @SITE_GN


SELECT TOP (1) @I = I.ID 
FROM TMP_NOUSED_TARGET_TABLE AS I WITH(NOLOCK) 
	JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
WHERE I.SEARCH_YN = 'N' AND S.SITE_GN =@SITE_GN 
ORDER BY ID 

SELECT @TOT_COUNT= MAX(I.ID) 
FROM TMP_NOUSED_TARGET_TABLE  AS I WITH(NOLOCK) 
JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
WHERE S.SITE_GN =@SITE_GN


WHILE ( @I <= @TOT_COUNT )
BEGIN

			UPDATE I
				SET START_TIME = GETDATE()
					--@SERVER_ID = I.SERVER_ID, @OBJECT_NAME = I.OBJECT_NAME, @SEQ_NO=SEQNO, @DB_NAME = DATABASE_NAME
			FROM TMP_NOUSED_TARGET_TABLE AS I WITH(NOLOCK)
				JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
			WHERE  S.SITE_GN =@SITE_GN   AND ID = @I

			SELECT @SERVER_ID = I.SERVER_ID, @OBJECT_NAME = I.OBJECT_NAME, @SEQ_NO =SEQNO, @DB_NAME = DATABASE_NAME
			--SELECT *
			FROM TMP_NOUSED_TARGET_TABLE AS I WITH(NOLOCK) 
				JOIN SERVERINFO AS S WITH(NOLOCK) ON I.SERVER_ID = S.SERVER_ID AND S.USE_YN = 'Y'
			WHERE  S.SITE_GN =@SITE_GN   AND ID = @I


			IF @OBJECT_NAME IS NULL CONTINUE; --   DATA  
	   
			-- ,  Object Name 
	        SET @OBJECT_NAME = REPLACE(@OBJECT_NAME,', ','')

			INSERT INTO NOUSED_TARGET_PROCEDURE 
			( REF_TYPE, SEQNO, REG_DATE, SCRIPT_NO, SERVER_ID, DATABASE_NAME, OBJECT_ID, OBJECT_NAME, SCHEMA_NAME, UPD_DATE)
			--SELECT 'T' AS REF_TYPE, @SEQ_NO ,@REG_DATE AS REG_DATE, D.SCRIPT_SEQ, D.SERVER_ID, D.DATABASE_NAME, D.OBJECT_ID, D.OBJECT_NAME, GETDATE() 
			--FROM dbo.DBA_SCRIPT_ARCHIVE_DATA AS D WITH(NOLOCK) 
			--	 JOIN SERVERINFO AS S ON D.SERVER_ID=S.SERVER_ID AND S.USE_YN = 'Y'
			--WHERE S.SITE_GN = @site_gn
			--	AND D.SERVER_ID = @SERVER_ID
			--	AND  contains(D.UNCOMM_SCRIPT, @OBJECT_NAME)
			SELECT DISTINCT 'T' AS REF_TYPE, @SEQ_NO ,@REG_DATE AS REG_DATE, CASE WHEN D.SCRIPT_SEQ IS NULL THEN 0 ELSE D.SCRIPT_SEQ END
			, S.SERVER_ID, D.DATABASE_NAME, D.REFERENCING_ID, D.OBJECT_NAME, D.SCHEMA_NAME, GETDATE() 
			FROM dbo.DBA_OBJECT_REFERENCE_LIST AS D WITH(NOLOCK) 
				 JOIN SERVERINFO AS S ON D.REFERENCED_SERVER_NAME=S.SERVER_NAME AND S.USE_YN = 'Y' AND D.REG_DATE > GETDATE()-1
			WHERE S.SITE_GN = @site_gn
				AND S.SERVER_ID = @SERVER_ID
				AND D.REFERENCED_ENTITY_NAME = @OBJECT_NAME
				AND D.REFERENCED_DATABASE_NAME = @DB_NAME
				AND D.OBJECT_TYPE in ('FN','P')
				
		
		UPDATE TMP_NOUSED_TARGET_TABLE SET SEARCH_YN= 'Y' ,end_time = GETDATE() WHERE ID = @I
		SET @I = @I + 1
END



--    
update  n
	set CALL_ACML_DAY = q.call_day, unused_day = q.unused_day
--SELECT * 
from NOUSED_TARGET_PROCEDURE  as n with(nolock) 
 join query_stats_usage as q with(nolock) on n.SCRIPT_NO = q.SCRIPT_SEQ  AND REF_TYPE = 'T'


--  
update  n
	set SYNC_CALL_ACML_DAY = q.call_day
--SELECT * 
from NOUSED_TARGET_PROCEDURE  as n with(nolock) 
	join db_synk as d with(nolock) on n.server_id = d.server_id and n.database_name  = d.db_name
	join query_stats_usage as q with(nolock) on d.sync_server_id = q.server_id and n.database_name = q.database_name and n.object_name = q.object_name  AND REF_TYPE = 'T'



UPDATE NOUSED_TARGET_PROCEDURE SET CALL_ACML_DAY  = CASE WHEN CALL_ACML_DAY IS NULL  THEN 0  ELSE CALL_ACML_DAY END 
	, SYNC_CALL_ACML_DAY  =  CASE WHEN SYNC_CALL_ACML_DAY IS NULL  THEN 0  ELSE SYNC_CALL_ACML_DAY END 
WHERE REF_TYPE = 'T' AND REG_DATE = @REG_DATE