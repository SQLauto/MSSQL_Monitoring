
/*************************************************************************  
* 프로시저명: dbo.UP_DBA_TRANS_INFO_MASTER
* 작성정보	: 2014-09-25 BY CHOI BO RA  작업 정리
* 관련페이지:  
* 내용		: 

* 수정정보	: 
**************************************************************************/
ALTER  PROCEDURE dbo.UP_DBA_TRANS_INFO_MASTER
AS

/* COMMON DECLARE */
SET NOCOUNT ON

/* USER DECLARE  */

/*BODY*/

DELETE TRANS_INFO_MASTER_BACKUP  WHERE REG_DATE >= CONVERT(DATE, GETDATE()) AND REG_DATE < CONVERT(DATE,GETDATE() + 1)

INSERT INTO TRANS_INFO_MASTER_BACKUP
SELECT  GETDATE(), * 
FROM TRANS_INFO_MASTER




UPDATE TRANS_INFO_MASTER_ACCUM	SET TO_SERVER_ID =  S.SERVER_ID 
FROM TRANS_INFO_MASTER_ACCUM AS M WITH(NOLOCK)
	JOIN SERVERINFO AS S WITH(NOLOCK) ON S.SERVER_NAME = M.TO_SERVER_NAME AND S.USE_YN = 'Y'
AND M.TO_SERVER_NAME IS NOT NULL


UPDATE TRANS_INFO_MASTER_ACCUM	SET SERVER_ID =  S.SERVER_ID 
FROM TRANS_INFO_MASTER_ACCUM AS M WITH(NOLOCK)
	JOIN SERVERINFO AS S WITH(NOLOCK) ON S.SERVER_NAME = M.SERVER_NAME AND S.USE_YN = 'Y'
AND M.SERVER_ID = 1



-- 부모들 신규 입력 
INSERT INTO TRANS_INFO_MASTER
( SERVER_ID, DB_NAME, TABLE_NAME, TO_SERVER_ID, TO_DB_NAME, TO_TABLE_NAME, USE_YN, WORK_TYPE
, PERIOD_TYPE, PERIOD, TRANS_COLUMN, TRANS_WHERE_STR, PARTITION_YN, SSIS_YN, JOB_NAME, SP_NAME, MGR_NAME
, MGR_TEAM, COMMENT, REG_DT, CHG_DT, REG_ID, CHG_ID, LOCAL_JOB_YN, LAST_TRANS_DATE
, LAST_DEL_PERIOD, TRANS_GROUP_NO, REF_SEQNO, REF_P_SEQNO)
SELECT 
 A.SERVER_ID, A.DB_NAME, A.TABLE_NAME, A.TO_SERVER_ID, A.TO_DB_NAME, A.TO_TABLE_NAME, A.USE_YN,A.WORK_TYPE
, A.PERIOD_TYPE, A.PERIOD, A.TRANS_COLUMN, A.TRANS_WHERE_STR, A.PARTITION_YN, A.SSIS_YN, A.JOB_NAME, A.SP_NAME, A.MGR_NAME
, A.MGR_TEAM, A.COMMENT, A.REG_DT, A.CHG_DT, A.REG_ID, A.CHG_ID, A.LOCAL_JOB_YN, A.LAST_TRANS_DATE
, A.LAST_DEL_PERIOD, A.TRANS_GROUP_NO, A.REF_SEQNO, A.REF_P_SEQNO

FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	RIGHT JOIN TRANS_INFO_MASTER_ACCUM  AS A WITH(NOLOCK) ON I.SERVER_ID = A.SERVER_ID AND I.DB_NAME = A.DB_NAME AND I.TABLE_NAME = A.TABLE_NAME 
						AND I.TO_SERVER_ID  = A.TO_SERVER_ID AND ISNULL(I.TO_DB_NAME, '') = ISNULL(A.TO_DB_NAME,'') AND ISNULL(I.TO_TABLE_NAME,'')= ISNULL(A.TO_TABLE_NAME,'')  AND A.LOCAL_JOB_YN = 'N'
	
WHERE A.REF_P_SEQNO = A.REF_SEQNO 
	AND I.SERVER_ID IS NULL
ORDER BY A.SERVER_ID, A.DB_NAME, A.TABLE_NAME

--UPDATE TRANS_INFO_MASTER SET P_TRANS_SEQNO = 0 WHERE REF_P_SEQNO = REF_SEQNO

-- 자식 신규 입력
INSERT INTO TRANS_INFO_MASTER
( SERVER_ID, DB_NAME, TABLE_NAME, TO_SERVER_ID, TO_DB_NAME, TO_TABLE_NAME, USE_YN, WORK_TYPE
, PERIOD_TYPE, PERIOD, TRANS_COLUMN, TRANS_WHERE_STR, PARTITION_YN, SSIS_YN, JOB_NAME, SP_NAME, MGR_NAME
, MGR_TEAM, COMMENT, REG_DT, CHG_DT, REG_ID, CHG_ID, LOCAL_JOB_YN, LAST_TRANS_DATE
, LAST_DEL_PERIOD, TRANS_GROUP_NO, REF_SEQNO, REF_P_SEQNO, P_TRANS_SEQNO)
 SELECT   
 A.SERVER_ID, A.DB_NAME, A.TABLE_NAME, A.TO_SERVER_ID, A.TO_DB_NAME, A.TO_TABLE_NAME, A.USE_YN,A.WORK_TYPE
, A.PERIOD_TYPE, A.PERIOD, A.TRANS_COLUMN, A.TRANS_WHERE_STR, A.PARTITION_YN, A.SSIS_YN, A.JOB_NAME, A.SP_NAME, A.MGR_NAME
, A.MGR_TEAM, A.COMMENT, A.REG_DT, A.CHG_DT, A.REG_ID, A.CHG_ID, A.LOCAL_JOB_YN, A.LAST_TRANS_DATE
, A.LAST_DEL_PERIOD, A.TRANS_GROUP_NO, A.REF_SEQNO, A.REF_P_SEQNO 
 , M.TRANS_SEQNO
FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	RIGHT JOIN (
		SELECT C.*,CASE WHEN SERVER_ID > 1000 THEN 'I' ELSE 'G' END AS SITE_GN
		FROM TRANS_INFO_MASTER_ACCUM  AS C WITH(NOLOCK)
		WHERE C.REF_SEQNO != C.REF_P_SEQNO	AND C.LOCAL_JOB_YN ='N'  
	) AS A 
	ON I.SERVER_ID = A.SERVER_ID AND I.DB_NAME = A.DB_NAME AND I.TABLE_NAME = A.TABLE_NAME 
						AND I.TO_SERVER_ID  = A.TO_SERVER_ID AND ISNULL(I.TO_DB_NAME,'') = ISNULL(A.TO_DB_NAME,'') AND ISNULL(I.TO_TABLE_NAME,'')= ISNULL(A.TO_TABLE_NAME,'')  AND A.LOCAL_JOB_YN = 'N'
	JOIN (  SELECT M.TRANS_SEQNO,M.REF_SEQNO, S.SITE_GN
			FROM TRANS_INFO_MASTER AS M WITH(NOLOCK) 
				JOIN SERVERINFO AS S WITH(NOLOCK) ON M.SERVER_ID = S.SERVER_ID AND S.USE_YN ='Y'
		) AS M ON M.REF_SEQNO = A.REF_P_SEQNO AND M.SITE_GN = A.SITE_GN

		--서버가 다른 곳이 main 일 수 도 있다 그런데 옥션 지마켓은 구문되어야 한다. 음.
WHERE I.SERVER_ID IS NULL    
ORDER BY A.SERVER_ID,A.DB_NAME, A.TABLE_NAME, A.REF_SEQNO


-- 부모 자식 관게 UPDATE 
UPDATE TRANS_INFO_MASTER
	SET USE_YN = A.USE_YN, 
		WORK_TYPE = A.WORK_TYPE,
		PERIOD_TYPE = A.PERIOD_TYPE,
		PERIOD = A.PERIOD,
		TRANS_COLUMN = A.TRANS_COLUMN,
		CHG_DT = GETDATE(),
		LAST_TRANS_DATE =A.LAST_TRANS_DATE
FROM TRANS_INFO_MASTER AS M 
	JOIN TRANS_INFO_MASTER_ACCUM AS A WITH(NOLOCK) ON M.REF_SEQNO = A.REF_SEQNO
			AND M.SERVER_ID = A.SERVER_ID AND M.DB_NAME = A.DB_NAME AND M.TABLE_NAME = A.TABLE_NAME 
						AND M.TO_SERVER_ID  = A.TO_SERVER_ID AND ISNULL(M.TO_DB_NAME,'') = ISNULL(A.TO_DB_NAME,'') AND ISNULL(M.TO_TABLE_NAME,'')= ISNULL(A.TO_TABLE_NAME,'')


UPDATE M
	SET TRANS_GROUP_NO = T.TRANS_GROUP_NO
FROM TRANS_INFO_MASTER AS M 
	JOIN TRANS_INFO_MASTER_ACCUM AS A WITH(NOLOCK) ON M.REF_SEQNO = A.REF_SEQNO
			AND M.SERVER_ID = A.SERVER_ID AND M.DB_NAME = A.DB_NAME AND M.TABLE_NAME = A.TABLE_NAME 
						AND M.TO_SERVER_ID  = A.TO_SERVER_ID AND ISNULL(M.TO_DB_NAME,'') = ISNULL(A.TO_DB_NAME,'') AND ISNULL(M.TO_TABLE_NAME,'')= ISNULL(A.TO_TABLE_NAME,'')
	JOIN TRANS_INFO_MASTER AS T ON M.P_TRANS_SEQNO = T.TRANS_SEQNO
WHERE M.TRANS_GROUP_NO IS NULL AND T.TRANS_GROUP_NO IS NOT NULL



--부모 자식 관계 아닌것 INSERT
INSERT INTO TRANS_INFO_MASTER
( SERVER_ID, DB_NAME, TABLE_NAME, TO_SERVER_ID, TO_DB_NAME, TO_TABLE_NAME, USE_YN, WORK_TYPE
, PERIOD_TYPE, PERIOD, TRANS_COLUMN, TRANS_WHERE_STR, PARTITION_YN, SSIS_YN, JOB_NAME, SP_NAME, MGR_NAME
, MGR_TEAM, COMMENT, REG_DT, CHG_DT, REG_ID, CHG_ID, LOCAL_JOB_YN, LAST_TRANS_DATE
, LAST_DEL_PERIOD, TRANS_GROUP_NO, REF_SEQNO, REF_P_SEQNO)
 SELECT 
 A.SERVER_ID, A.DB_NAME, A.TABLE_NAME, A.TO_SERVER_ID, A.TO_DB_NAME, A.TO_TABLE_NAME, A.USE_YN,A.WORK_TYPE
, A.PERIOD_TYPE, A.PERIOD, LEFT(A.TRANS_COLUMN,30) AS TRANS_COLUMN, A.TRANS_WHERE_STR, A.PARTITION_YN, A.SSIS_YN, A.JOB_NAME, A.SP_NAME, A.MGR_NAME
, A.MGR_TEAM, A.COMMENT, A.REG_DT, A.CHG_DT, A.REG_ID, A.CHG_ID, A.LOCAL_JOB_YN, A.LAST_TRANS_DATE
, A.LAST_DEL_PERIOD, A.TRANS_GROUP_NO, A.REF_SEQNO, A.REF_P_SEQNO

FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	RIGHT JOIN TRANS_INFO_MASTER_ACCUM  AS A WITH(NOLOCK) ON I.SERVER_ID = A.SERVER_ID AND I.DB_NAME = A.DB_NAME AND I.TABLE_NAME = A.TABLE_NAME 
						AND I.TO_SERVER_ID  = A.TO_SERVER_ID AND ISNULL(I.TO_DB_NAME,'') = ISNULL(A.TO_DB_NAME,'') AND ISNULL(I.TO_TABLE_NAME,'')= ISNULL(A.TO_TABLE_NAME,'')	

WHERE I.SERVER_ID IS NULL  AND A.LOCAL_JOB_YN ='Y' 
--WHERE  A.TABLE_NAME = 'BEST100'
ORDER BY A.SERVER_ID, A.DB_NAME, A.TABLE_NAME


UPDATE TRANS_INFO_MASTER
	SET USE_YN = A.USE_YN, 
		WORK_TYPE = A.WORK_TYPE,
		PERIOD_TYPE = A.PERIOD_TYPE,
		PERIOD = A.PERIOD,
		TRANS_COLUMN = LEFT(A.TRANS_COLUMN,30),
		CHG_DT = GETDATE(),
		LAST_TRANS_DATE =A.LAST_TRANS_DATE

--SELECT  I.TRANS_SEQNO,
-- A.SERVER_ID, A.DB_NAME, A.TABLE_NAME, A.TO_SERVER_ID, A.TO_DB_NAME, A.TO_TABLE_NAME, A.USE_YN,A.WORK_TYPE
--, A.PERIOD_TYPE, A.PERIOD, A.TRANS_COLUMN, A.TRANS_WHERE_STR, A.PARTITION_YN, A.SSIS_YN, A.JOB_NAME, A.SP_NAME, A.MGR_NAME
--, A.MGR_TEAM, A.COMMENT, A.REG_DT, A.CHG_DT, A.REG_ID, A.CHG_ID, A.LOCAL_JOB_YN, A.LAST_TRANS_DATE
--, A.LAST_DEL_PERIOD, A.TRANS_GROUP_NO, A.REF_SEQNO, A.REF_P_SEQNO
FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	JOIN TRANS_INFO_MASTER_ACCUM  AS A WITH(NOLOCK) ON I.SERVER_ID = A.SERVER_ID AND I.DB_NAME = A.DB_NAME AND I.TABLE_NAME = A.TABLE_NAME 
					AND ISNULL(I.TO_SERVER_ID, '')  = ISNULL(A.TO_SERVER_ID,'') AND ISNULL(I.TO_DB_NAME, '') = ISNULL(A.TO_DB_NAME, '') 
					AND ISNULL(I.TO_TABLE_NAME, '')= ISNULL(A.TO_TABLE_NAME, '')
WHERE I.LOCAL_JOB_YN = 'Y' AND A.LOCAL_JOB_YN= 'Y'


-- 삭제 
-- 부모 자식 관계 아닌것 
DELETE TRANS_INFO_MASTER
-- SELECT I.*
FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	LEFT JOIN TRANS_INFO_MASTER_ACCUM  AS A WITH(NOLOCK) ON I.SERVER_ID = A.SERVER_ID AND I.DB_NAME = A.DB_NAME AND I.TABLE_NAME = A.TABLE_NAME 
					AND ISNULL(I.TO_SERVER_ID, '')  = ISNULL(A.TO_SERVER_ID,'') AND ISNULL(I.TO_DB_NAME, '') = ISNULL(A.TO_DB_NAME, '') 
					AND ISNULL(I.TO_TABLE_NAME, '')= ISNULL(A.TO_TABLE_NAME, '')
					AND A.LOCAL_JOB_YN ='Y'
WHERE I.LOCAL_JOB_YN = 'Y' 
	AND A.SERVER_ID IS NULL



DELETE TRANS_INFO_MASTER
--SELECT COUNT(*)
FROM TRANS_INFO_MASTER AS I WITH(NOLOCK) 
	LEFT JOIN TRANS_INFO_MASTER_ACCUM  AS A WITH(NOLOCK) ON I.REF_SEQNO = A.REF_SEQNO
					AND A.LOCAL_JOB_YN ='N'

WHERE I.LOCAL_JOB_YN = 'N' 
	AND A.SERVER_ID IS NULL





